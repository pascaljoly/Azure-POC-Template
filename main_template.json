{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "QualiX_DeploymentMode": {
      "type": "string",
      "defaultValue": "External",
      "allowedValues": [ "External", "Internal" ],
      "metadata": {
        "description": "Use external deployment to create a QualiX VM with a public IP, or internal deployment to create the QualiX VM with a private IP. The private IP is accessible from the networks that are connected to the Management VNet (such as the network in which the Quali Server resides)."
      }
    },
    "CloudShellVMsAdminUser": {
      "type": "string",
      "metadata": {
        "description": "The admin user to create"
      }
    },
    "CloudShellVMsAdminPassword": {
      "type": "securestring",
      "metadata": { "description": "The admin password to create" }
    },
    "ManagementVnetCIDR": {
      "defaultValue": "192.168.120.0/24",
      "type": "string",
      "metadata": {
        "description": "The IP range (in CIDR notation) to be used for the Management VNet. Specify a class C CIDR (/24). Example: 192.168.120.0/24"
      }
    },
    "ManagementVnetSubnetCIDR": {
      "defaultValue": "192.168.120.16/28",
      "type": "string",
      "metadata": {
        "description": "The IP range (in CIDR notation) of the subnet to be used by the Management VNet. This range must be included in the Management VNet�s range. This subnet is used by CloudShell components such as QualiX Server and TestShell Execution Server. Example: 192.168.120.16/28"
      }
    }
  },
  "variables": {
    "templateRepo": "https://raw.githubusercontent.com/QualiSystems/Azure-POC-Template/master/",
    "infraTemplateName": "infrastructure.json",
    "windowsComputeTemplateName": "base_windows_compute.json",
    "location": "[resourceGroup().location]",
    "virtualNetworks_mgmt_vnet_name": "vn-devtest01",
    "virtualNetworks_sandbox_vnet_name": "vn-devtest02",
    "virtualMachineCsName": "QualiCsVm",
    "virtualMachinePoName": "QualiPortalVm",
    "storageAccountName": "[concat('storage',uniquestring(resourceGroup().id))]",
    "qx_template_location": "https://s3.amazonaws.com/quali-prod-binaries/9.0.0-180/Azure-Template/",
    "qualixscriptUrl": "https://s3.amazonaws.com/quali-prod-binaries/guacamole-quali-install.sh",
    "commandToExe": "sh guacamole-quali-install.sh",
    "vmSize": "Standard_DS4_v2",
    "qualiVMSize": "Standard_DS3_v2",
    "publicIpAddressNameQualiVM": "quali_ip",
    "defaultNSGName": "NSG-Quali",
    "portalNsgName": "NSG-Portal",
    "scriptName": "QualiX-Script",

    "storageAccountFullName" : "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
    "mgmtVNetFullName" : "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworks_mgmt_vnet_name'))]"
  },
  "resources": [
      {
        "apiVersion": "2017-05-10",
        "name": "pid-5a91ff6a-52b4-4e6e-92c8-1f47c8e9b9c6",
        "type": "Microsoft.Resources/deployments",
        "properties": {
          "mode": "Incremental",
          "template": {
            "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
            "contentVersion": "1.0.0.0",
            "resources": []
          }
        }
      },
    {
      "apiVersion": "2015-01-01",
      "name": "qxDeployment",
      "type": "Microsoft.Resources/deployments",
      "dependsOn": [
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('qx_template_location'),'qx',parameters('QualiX_DeploymentMode'),'Mode.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "storageAccountName": {
            "value": "[variables('storageAccountName')]"
          },
          "scriptName": {
            "value": "[variables('scriptName')]"
          },
          "adminUsername": { "value": "[parameters('CloudShellVMsAdminUser')]" },
          "adminPassword": { "value": "[parameters('CloudShellVMsAdminPassword')]" },
          "virtualNetworks_mgmt_vnet_name": { "value": "[variables('mgmtVNetFullName')]" },
          "storageBlob": {
            "value": "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
          },
          "SubnetRef": { "value": "[concat(reference('infraDeployment').outputs.vnetId.value,'/subnets/','default')]" },
          "scriptUrl": { "value": "[variables('qualixscriptUrl')]" },
          "commandToExe": { "value": "[variables('commandToExe')]" },
          "vmSize": { "value": "[variables('qualiVMSize')]" }
        }
      }
    },

    {
      "apiVersion": "2015-01-01",
      "name": "infraDeployment",
      "type": "Microsoft.Resources/deployments",
      "dependsOn": [
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('templateRepo'),variables('infraTemplateName'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "ManagementVnetCIDR": { "value": "[parameters('ManagementVnetCIDR')]" },
          "ManagementVnetSubnetCIDR": { "value": "[parameters('ManagementVnetSubnetCIDR')]" },
          "MGMTVNetName": { "value": "[variables('virtualNetworks_mgmt_vnet_name')]" },
          "SandboxVNetName": { "value": "[variables('virtualNetworks_sandbox_vnet_name')]" },
          "StorageAccountName": { "value": "[variables('storageAccountName')]" }

        
      }
    }
    },

    {
      "apiVersion": "2017-05-10",
      "name": "qualiServerDeployment",
      "type": "Microsoft.Resources/deployments",
      "dependsOn": [
          "[concat('Microsoft.Resources/deployments/', 'infraDeployment')]"

        ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('templateRepo'),variables('windowsComputeTemplateName'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "VirtualMachineName": { "value": "[variables('virtualMachineCsName')]" },
          "StorageAccountName": { "value": "[variables('storageAccountName')]" },
          "SSHUser": { "value": "[parameters('CloudShellVMsAdminUser')]" },
          "SSHPassword": { "value": "[parameters('CloudShellVMsAdminPassword')]" },
          "VMSize": { "value": "[variables('vmSize')]" },
          "VNetName": { "value": "[variables('virtualNetworks_mgmt_vnet_name')]" }

        }
      }
    },

    {
      "apiVersion": "2017-05-10",
      "name": "qualiPortalDeployment",
      "type": "Microsoft.Resources/deployments",
      "dependsOn": [
          "[concat('Microsoft.Resources/deployments/', 'infraDeployment')]"

      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('templateRepo'),variables('windowsComputeTemplateName'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "VirtualMachineName": { "value": "[variables('virtualMachinePoName')]" },
          "StorageAccountName": { "value": "[variables('storageAccountName')]" },
          "SSHUser": { "value": "[parameters('CloudShellVMsAdminUser')]" },
          "SSHPassword": { "value": "[parameters('CloudShellVMsAdminPassword')]" },
          "VMSize": { "value": "[variables('vmSize')]" },
          "VNetName": { "value": "[variables('virtualNetworks_mgmt_vnet_name')]" },
          "NSGName": { "value": "[variables('portalNsgName')]" }
        }
      }
    },

    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('portalNsgName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "ALLOW_RDP",
            "properties": {
              "description": "By default RDP allowed for CS server",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "3389",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 1020,
              "direction": "Inbound"
            }
          },
          {
            "name": "ALLOW_HTTP",
            "properties": {
              "description": "HTTP Access",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "80",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 1021,
              "direction": "Inbound"
            }
          },
          {
            "name": "ALLOW_HTTPS",
            "properties": {
              "description": "HTTPS Access",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "443",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 1022,
              "direction": "Inbound"
            }
          }
        ]
      }
    }

  ]
  }
